/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    YourContract: {
      address: "0xc6b8fbf96cf7bbe45576417ec2163acecfa88ecc",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "assignCowIntoLivestockFund",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "buyGreenhouseShares",
          inputs: [
            {
              name: "_sharePercentage",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "buyLivestockShares",
          inputs: [
            {
              name: "_sharePercentage",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "communityZones",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "pricePerShare",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesSold",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "cows",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "pricePerShare",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesSold",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createGreenhouseA",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getCowAvailableShares",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getCowInfo",
          inputs: [],
          outputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "pricePerShare",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesSold",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesAvailable",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getGreenhouseAvailableShares",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getGreenhouseInfo",
          inputs: [],
          outputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "pricePerShare",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesSold",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesAvailable",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "active",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "nextAssetId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "SharePurchased",
          inputs: [
            {
              name: "assetId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "buyer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sharePercentage",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "totalPrice",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "assetName",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 127,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
